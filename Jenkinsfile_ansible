pipeline {
    agent any
    
    environment {
        DOCKER_HOST_SERVER = 'ec2-user@54.80.0.85'
        Ansible_HOST_SERVER = '18.232.118.57'
        ANSIBLE_HOST_NAME = 'ec2-user'
    }
    
  tools {
        maven 'maven_3.9.6' 
    }
    

    stages {
        
        stage('Build') {
            steps {
                // Run Maven build command
                sh """
                  cd ./app
                  ls 
                  mvn clean install
                """
            }
        }
        
        
        
        stage('copy require files to ansible server') {
            steps {
            sshagent(['host_key']) {
                sh "scp -o StrictHostKeyChecking=no Ansible/* ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER}:~/Ansible"
                sh "scp -r app/* ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER}:~/app "
                withCredentials([sshUserPrivateKey(credentialsId: 'host_key', keyFileVariable: 'keyfile')]) {
                        sh "scp ${keyfile} ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER}:~/ssh-key.pem"
                        }

            }
        }
       }

        stage('deploy ansible playbok to docker host') {
            steps {
             script {
                    echo "calling ansible playbook to configure ec2 instances"
                    def remote = [:]
                    remote.name = ANSIBLE_HOST_NAME
                    remote.host = Ansible_HOST_SERVER
                    remote.allowAnyHosts = true

                    withCredentials([sshUserPrivateKey(credentialsId: 'host_key', keyFileVariable: 'keyfile', usernameVariable: 'HOST_KEY')]){
                        remote.user = HOST_KEY
                        remote.identityFile = keyfile
                        sshCommand remote: remote, command: "ansible-playbook -i ~/Ansible/hosts ~/Ansible/my-playbook.yaml"
                    }
                }

        }
    }



    
}
}
