pipeline {
    agent any
    
    environment {
        DOCKER_HOST_SERVER = 'ec2-user@54.80.0.85'
        Ansible_HOST_SERVER = '100.27.175.95'
        ANSIBLE_HOST_NAME = 'ec2-user'
    }

    stages { 
        
        stage('copy require files to ansible server') {
            steps {
            sshagent(['host_key']) {
                sh "scp -o StrictHostKeyChecking=no Ansible/ansible_k8s/* ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER}:~/"
                // withCredentials([sshUserPrivateKey(credentialsId: 'host_key', keyFileVariable: 'keyfile')]) {
                //         sh "scp ${keyfile} ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER}:~/ssh-key.pem"
                //         }

                withCredentials([file(credentialsId: 'kube_config', variable: 'SECRET_FILE')]) {
                    // Use scp to copy the secret file to the remote server
                    sh "scp ${SECRET_FILE} ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER}:~/"
                }

            }
        }
       }


    stage('Login to docker hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'moatazxz_dockerhub', usernameVariable: 'REGISTRY_USER', passwordVariable: 'REGISTRY_PASS')]) {
                    // Login to Docker registry
                    echo "Attempting to log in as ${REGISTRY_USER}"
                    sh "echo $REGISTRY_PASS | sudo docker login --username $REGISTRY_USER --password-stdin"
                }
        }
    }

       stage('deploy to k8s') {
            steps {
            sshagent(['host_key']) {
                sh """
                  ssh  ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER} ' kubectl --kubeconfig /path/to/kubeconfig_file get pods '

                  ssh  ${ANSIBLE_HOST_NAME}@${Ansible_HOST_SERVER} ' ansible-playbook   k8-playbook.yaml'
                  
                 """
        }
       }
       }



    //     stage('deploy ansible playbok to docker host') {
    //         steps {
    //          script {
    //                 echo "calling ansible playbook to configure ec2 instances"
    //                 def remote = [:]
    //                 remote.name = ANSIBLE_HOST_NAME
    //                 remote.host = Ansible_HOST_SERVER
    //                 remote.allowAnyHosts = true

    //                 withCredentials([sshUserPrivateKey(credentialsId: 'host_key', keyFileVariable: 'keyfile')]){
    //                     remote.identityFile = keyfile
    //                     sshCommand remote: remote, command: "ansible-playbook  ~/Ansible/my-playbook.yaml"
    //                 }
    //             }

    //     }
    // }



    
}
}
